using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Pixata.Extensions.Tests {
  [TestClass]
  public class IntExtensionMethods_Tests {
    #region OrdinalSuffix

    [DataRow(1, "st", false)]
    [DataRow(2, "nd", false)]
    [DataRow(3, "rd", false)]
    [DataRow(4, "th", false)]
    [DataRow(5, "th", false)]
    [DataRow(6, "th", false)]
    [DataRow(7, "th", false)]
    [DataRow(8, "th", false)]
    [DataRow(9, "th", false)]
    [DataRow(10, "th", false)]
    [DataRow(11, "th", false)]
    [DataRow(12, "th", false)]
    [DataRow(13, "th", false)]
    [DataRow(14, "th", false)]
    [DataRow(15, "th", false)]
    [DataRow(16, "th", false)]
    [DataRow(17, "th", false)]
    [DataRow(18, "th", false)]
    [DataRow(19, "th", false)]
    [DataRow(20, "th", false)]
    [DataRow(21, "st", false)]
    [DataRow(22, "nd", false)]
    [DataRow(23, "rd", false)]
    [DataRow(24, "th", false)]
    [DataRow(25, "th", false)]
    [DataRow(26, "th", false)]
    [DataRow(27, "th", false)]
    [DataRow(28, "th", false)]
    [DataRow(29, "th", false)]
    [DataRow(30, "th", false)]
    [DataRow(31, "st", false)]
    [DataRow(32, "nd", false)]
    [DataRow(33, "rd", false)]
    [DataRow(34, "th", false)]
    [DataRow(35, "th", false)]
    [DataRow(36, "th", false)]
    [DataRow(37, "th", false)]
    [DataRow(38, "th", false)]
    [DataRow(39, "th", false)]
    [DataRow(40, "th", false)]
    [DataTestMethod]
    public void IntExtensionMethods_OrdinalSuffix_IncludeNumber_False(int n, string suffix, bool includeNumber) =>
      Assert.AreEqual(suffix, n.OrdinalSuffix(includeNumber));

    [DataRow(1, "1st")]
    [DataRow(2, "2nd")]
    [DataRow(3, "3rd")]
    [DataRow(4, "4th")]
    [DataRow(5, "5th")]
    [DataRow(6, "6th")]
    [DataRow(7, "7th")]
    [DataRow(8, "8th")]
    [DataRow(9, "9th")]
    [DataRow(10, "10th")]
    [DataRow(11, "11th")]
    [DataRow(12, "12th")]
    [DataRow(13, "13th")]
    [DataRow(14, "14th")]
    [DataRow(15, "15th")]
    [DataRow(16, "16th")]
    [DataRow(17, "17th")]
    [DataRow(18, "18th")]
    [DataRow(19, "19th")]
    [DataRow(20, "20th")]
    [DataRow(21, "21st")]
    [DataRow(22, "22nd")]
    [DataRow(23, "23rd")]
    [DataRow(24, "24th")]
    [DataRow(25, "25th")]
    [DataRow(26, "26th")]
    [DataRow(27, "27th")]
    [DataRow(28, "28th")]
    [DataRow(29, "29th")]
    [DataRow(30, "30th")]
    [DataRow(31, "31st")]
    [DataRow(32, "32nd")]
    [DataRow(33, "33rd")]
    [DataRow(34, "34th")]
    [DataRow(35, "35th")]
    [DataRow(36, "36th")]
    [DataRow(37, "37th")]
    [DataRow(38, "38th")]
    [DataRow(39, "39th")]
    [DataRow(40, "40th")]
    [DataTestMethod]
    public void IntExtensionMethods_OrdinalSuffix_DoNotIncludeNumber_False(int n, string suffix) =>
      Assert.AreEqual(suffix, n.OrdinalSuffix());

    #endregion
  }
}