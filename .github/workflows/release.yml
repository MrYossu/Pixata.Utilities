name: Release Branch Workflow
  
on:  
  push:  
    branches: [ release ] # this workflow publishes to nuget, ONLY run it on a PUSH (no PRs)

jobs:  
  build_pixata: 
    runs-on: windows-latest  
    steps:  
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core  
      uses: actions/setup-dotnet@v1.7.2  
      with:  
        dotnet-version: '5.0'
    
# ***************** BUILDS **************** #

    # Pixata.Blazor
    - name: Restore - Pixata.Blazor Dependencies
      run: dotnet restore Pixata.Blazor/Pixata.Blazor.csproj  --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}
    
    - name: Build - Pixata.Blazor.csproj
      run: dotnet build Pixata.Blazor/Pixata.Blazor.csproj  --configuration Release --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    # Pixata.Blazor.LanguageExtComponents
    - name: Restore - Pixata.Blazor.LanguageExtComponents Dependencies
      run: dotnet restore Pixata.Blazor.LanguageExtComponents/Pixata.Blazor.LanguageExtComponents.csproj  --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}
    
    - name: Build - Pixata.Blazor.LanguageExtComponents.csproj
      run: dotnet build Pixata.Blazor.LanguageExtComponents/Pixata.Blazor.LanguageExtComponents.csproj  --configuration Release --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    # Pixata.Blazor.Sample
    - name: Restore - Pixata.Blazor.Sample Dependencies
      run: dotnet restore Pixata.Blazor.Sample/Pixata.Blazor.Sample.csproj --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    - name: Build - Pixata.Blazor.Sample
      run: dotnet build Pixata.Blazor.Sample/Pixata.Blazor.Sample.csproj --configuration Release --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}
    
    # Pixata.Extensions
    - name: Restore - Pixata.Extensions Dependencies
      run: dotnet restore Pixata.Extensions/Pixata.Extensions.csproj --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    - name: Build - Pixata.Extensions.csproj
      run: dotnet build Pixata.Extensions/Pixata.Extensions.csproj --configuration Release --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    # Pixata.Extensions.Tests
    - name: Restore - Pixata.Extensions.Tests Dependencies
      run: dotnet restore Pixata.Extensions.Tests/Pixata.Extensions.Tests.csproj --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

    - name: Build - Pixata.Extensions.Tests
      run: dotnet build Pixata.Extensions.Tests/Pixata.Extensions.Tests.csproj --configuration Release --configfile ./nuget.config
      env:
        TELERIK_USERNAME: ${{secrets.MYTELERIKACCOUNTUSERNAME}}
        TELERIK_PASSWORD: ${{secrets.MYTELERIKACCOUNTPASSWORD}}

# ***************** TESTS **************** #

    - name: Run Tests
      run: dotnet test --verbosity normal 
    
# ***************** PUBLISHING **************** #

    - name: Publish Pixata.Blazor
      uses: brandedoutcast/publish-nuget@v2.5.5  
      with:   
       PROJECT_FILE_PATH: Pixata.Blazor/Pixata.Blazor.csproj  
       NUGET_KEY: ${{secrets.NUGET_API_KEY}} 

    - name: Publish Pixata.Blazor.LanguageExtComponents
      uses: brandedoutcast/publish-nuget@v2.5.5  
      with:   
       PROJECT_FILE_PATH: Pixata.Blazor.LanguageExtComponents/Pixata.Blazor.LanguageExtComponents.csproj  
       NUGET_KEY: ${{secrets.NUGET_API_KEY}} 

    - name: Publish Pixata.Extensions
      uses: brandedoutcast/publish-nuget@v2.5.5  
      with:   
        PROJECT_FILE_PATH: Pixata.Extensions/Pixata.Extensions.csproj  
        NUGET_KEY: ${{secrets.NUGET_API_KEY}} 

  # *** Publish Pixata.Blazor.Sample ***
    - name: Create TmpFolder
      run: mkdir TmpFolder

    - name: Create app_offline.htm
      run: echo "Updating, please wait" > TmpFolder/app_offline.htm

    - name: Upload app_offline.htm
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.PIXATATESTFTPSERVER }}
        username: ${{ secrets.PIXATATESTFTPUSER }}
        password: ${{ secrets.PIXATATESTFTPPASSWORD }}
        local-dir: ./TmpFolder/

    - name: Publish Pixata.Blazor.Sample
      run: dotnet publish Pixata.Blazor.Sample\Pixata.Blazor.Sample.csproj --framework net5.0 --output Pixata.Blazor.Sample.Publish

    - name: Deploy Pixata.Blazor.Sample
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ${{ secrets.PIXATATESTFTPSERVER }}
        username: ${{ secrets.PIXATATESTFTPUSER }}
        password: ${{ secrets.PIXATATESTFTPPASSWORD }}
        local-dir: ./Pixata.Blazor.Sample.Publish/

    - name: Delete TmpFolder
      uses: StephanThierry/ftp-delete-action@releases/v1
      with:
        host: ${{ secrets.PIXATATESTFTPSERVER }}
        user: ${{ secrets.PIXATATESTFTPUSER }}
        password: ${{ secrets.PIXATATESTFTPPASSWORD }}
        remoteFiles: "TmpFolder/app_offline.htm"
        #workingDir: "/public_html"
        ignoreSSL: "1"
