<div style="position: relative">
  <div id="confirmOverlay" style="display: @_displayStyle; position: @_position">
    <div id="confirmOverlayContent">
      <p>@Caption</p>
      <button class="btn btn-primary" @onclick="@(() => ButtonClicked(true))">@YesText</button> <button class="btn btn-secondary" @onclick="@(() => ButtonClicked(false))">@NoText</button>
    </div>
  </div>

  @ChildContent
</div>

<style>
  #confirmOverlay {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
  }

  #confirmOverlay #confirmOverlayContent {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 18px;
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    padding: 10px;
    background: #fff;
    color: #000;
    text-align: center;
    box-shadow: 10px 10px 5px #333;
    border-radius: 10px;
  }
</style>

@code {

  [Parameter]
  public PopUpDisplayOptions PopUpDisplayOption { get; set; } = PopUpDisplayOptions.Container;

  [Parameter]
  public string Caption { get; set; } = "Are you sure?";

  [Parameter]
  public string YesText { get; set; } = "Yes";

  [Parameter]
  public string NoText { get; set; } = "No";

  [Parameter]
  public RenderFragment ChildContent { get; set; }

  [Parameter]
  public EventCallback<bool> OnClicked { get; set; }

  private string _displayStyle = "none";
  private string _position;
  private bool _closeOnClick;

  protected override void OnParametersSet() =>
    _position = PopUpDisplayOption == PopUpDisplayOptions.Container ? "absolute" : "fixed";

  public void Display(string caption = "", bool closeOnClick = true) {
    if (!string.IsNullOrWhiteSpace(caption)) {
      Caption = caption;
    }
    _closeOnClick = closeOnClick;
    _displayStyle = "block";
  }

  private void ButtonClicked(bool yes) {
    if (!yes || _closeOnClick) {
      _displayStyle = "none";
    }
    OnClicked.InvokeAsync(yes);
  }


  public void Close() =>
    _displayStyle = "none";

}