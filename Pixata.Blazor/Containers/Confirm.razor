@* NOTE - In order to have the overlay cover just the component's container, you must set the display style of the container to relative *@
<link href="css/confirm.css" rel="stylesheet" />
<div id="confirmOverlay" style="display: @_displayStyle">
  <div id="confirmOverlayContent">
    <p>@Caption</p>
    <button class="btn btn-primary" @onclick="@(() => ButtonClicked(true))">@YesText</button> <button class="btn btn-secondary" @onclick="@(() => ButtonClicked(false))">@NoText</button>
  </div>
</div>

@ChildContent

@code {

  [Parameter]
  public string Caption { get; set; }

  [Parameter]
  public string YesText { get; set; } = "Yes";

  [Parameter]
  public string NoText { get; set; } = "No";

  [Parameter]
  public bool Result { get; set; }

  [Parameter]
  public EventCallback<bool> ResultChanged { get; set; }

  [Parameter]
  public RenderFragment ChildContent { get; set; }

  private string _displayStyle = "none";

  public void Display(string caption = "") {
    if (!string.IsNullOrWhiteSpace(caption)) {
      Caption = caption;
    }
    _displayStyle = "block";
  }

  private async Task ButtonClicked(bool yes) {
    _displayStyle = "none";
    Result = yes;
    await ResultChanged.InvokeAsync(Result);
  }

}